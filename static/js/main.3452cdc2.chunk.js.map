{"version":3,"sources":["Components/imageGalleryList/imageGalleryItem/ImageGalleryItem.js","Components/imageGalleryList/ImageGalleryList.js","Components/modal/Modal.js","Components/searchbar/Searchbar.js","Components/ImageGallery.js","App.js","index.js"],"names":["ImageGalleryItem","image","largeImgHendler","id","className","onClick","data-source","largeImageURL","src","webformatURL","alt","type","ImageGalleryList","images","map","modalRoot","document","getElementById","Modal","handleClose","e","code","props","onClose","currentTarget","target","window","addEventListener","this","removeEventListener","console","log","largeImg","createPortal","open","Component","Searchbar","state","searchQuery","onHeandlerSubmit","preventDefault","onSubmit","onHeandlerChange","name","value","setState","onChange","placeholder","KEY","ImageGallery","page","query","shoModal","loader","error","axiosImage","a","axios","get","data","prevState","hits","scrollTo","top","documentElement","scrollHeight","behavior","onFormSubmit","showMore","largeImage","dataset","source","openCloseModal","prevSt","prevProps","length","App","ReactDOM","render"],"mappings":"0TAkBeA,EAhBU,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBACjC,OACE,mCACE,oBAAIC,GAAIF,EAAME,GAAIC,UAAU,mBAA5B,SACE,qBACEC,QAASH,EACTI,cAAaL,EAAMM,cACnBC,IAAKP,EAAMQ,aACXC,IAAKT,EAAMU,KACXP,UAAU,gCCQLQ,EAhBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQX,EAAsB,EAAtBA,gBAClC,OACE,mCACE,oBAAIE,UAAU,eAAd,gBACGS,QADH,IACGA,OADH,EACGA,EAAQC,KAAI,SAACb,GAAD,OACX,cAAC,EAAD,CACEA,MAAOA,EAEPC,gBAAiBA,GADZD,EAAME,YCPjBY,EAAYC,SAASC,eAAe,cAkC3BC,E,4MAxBbC,YAAc,SAACC,GACE,WAAXA,EAAEC,MACJ,EAAKC,MAAMC,UAETH,EAAEI,gBAAkBJ,EAAEK,QACxB,EAAKH,MAAMC,W,uDAZf,WACEG,OAAOC,iBAAiB,UAAWC,KAAKT,e,kCAE1C,WACEO,OAAOG,oBAAoB,UAAWD,KAAKT,e,oBAY7C,WAEE,OADAW,QAAQC,IAAIH,KAAKN,MAAMU,UAChBC,uBACLL,KAAKN,MAAMY,KACT,qBAAK9B,UAAU,UAAUC,QAASuB,KAAKT,YAAvC,SACE,qBAAKf,UAAU,QAAf,SACE,qBAAKI,IAAKoB,KAAKN,MAAMU,SAAUtB,IAAI,SAGrC,KACJK,O,GA3BcoB,a,QCiCLC,E,4MAnCbC,MAAQ,CACNC,YAAa,I,EAGfC,iBAAmB,SAACnB,GAClBA,EAAEoB,iBACF,EAAKlB,MAAMmB,SAAS,EAAKJ,MAAMC,c,EAGjCI,iBAAmB,SAACtB,GAClB,MAAwBA,EAAEK,OAAlBkB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,4CAG1B,WACE,OACE,wBAAQxC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaqC,SAAUb,KAAKW,iBAA5C,UACE,wBAAQ5B,KAAK,SAASP,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACE0C,SAAUlB,KAAKc,iBACftC,UAAU,mBACVO,KAAK,OACLoC,YAAY,2BACZJ,KAAK,yB,GA5BOR,aCKlBa,EAAM,qCA8FGC,E,4MA3FbZ,MAAQ,CACNxB,OAAQ,GACRN,cAAe,GACf2C,KAAM,EACNC,MAAO,GACPC,UAAU,EACVC,QAAQ,EACRC,MAAO,M,EAcTC,W,sBAAa,8BAAAC,EAAA,+EAEcC,IAAMC,IAAN,qCACS,EAAKrB,MAAMc,MADpB,iBACkC,EAAKd,MAAMa,KAD7C,gBACyDF,EADzD,yDAFd,gBAEDW,EAFC,EAEDA,KAGR,EAAKd,UAAS,SAACe,GAAD,MAAgB,CAC5B/C,OAAO,GAAD,mBAAM+C,EAAU/C,QAAhB,YAA2B8C,EAAKE,WAN/B,yEAUT,EAAKhB,UAAS,SAACe,GAAD,MAAgB,CAC5BP,QAAQ,MAGN,EAAKhB,MAAMa,KAAO,GACpBxB,OAAOoC,SAAS,CACdC,IAAK/C,SAASgD,gBAAgBC,aAC9BC,SAAU,WAjBL,4E,EAuBbC,aAAe,SAAChB,GACd,EAAKN,SAAS,CAAEM,MAAO,GAAID,KAAM,EAAGrC,OAAQ,KAC5C,EAAKgC,SAAS,CAAEM,MAAOA,EAAOD,KAAM,EAAGrC,OAAQ,M,EAGjDuD,SAAW,WACT,EAAKvB,UAAS,SAACe,GAAD,MAAgB,CAAEV,KAAMU,EAAUV,KAAO,O,EAGzDhD,gBAAkB,SAACkB,GACjB,IAAMiD,EAAajD,EAAEK,OAAO6C,QAAQC,OACpC,EAAK1B,SAAS,CAAEtC,cAAe8D,IAC/B,EAAKG,kB,EAEPA,eAAiB,WACf,EAAK3B,UAAS,SAAC4B,GAAD,MAAa,CAAErB,UAAWqB,EAAOrB,c,wDAjDjD,SAAmBsB,EAAWd,IACxBhC,KAAKS,MAAMc,QAAUS,EAAUT,OAA8B,KAArBvB,KAAKS,MAAMc,OAGrDvB,KAAKS,MAAMc,QAAUS,EAAUT,OAC/BvB,KAAKS,MAAMa,OAASU,EAAUV,OAH9BtB,KAAK2B,e,oBAkDT,WACE,OACE,qCACE,cAAC,EAAD,CAAWd,SAAUb,KAAKuC,eAEzBvC,KAAKS,MAAMgB,OACV,cAAC,IAAD,IAEA,cAAC,EAAD,CACExC,OAAQe,KAAKS,MAAMxB,OACnBX,gBAAiB0B,KAAK1B,kBAGzB0B,KAAKS,MAAMxB,OAAO8D,OAAS,GAC1B,wBAAQvE,UAAU,SAASO,KAAK,SAASN,QAASuB,KAAKwC,SAAvD,uBAKF,cAAC,EAAD,CACElC,KAAMN,KAAKS,MAAMe,SACjB7B,QAASK,KAAK4C,eACdxC,SAAUJ,KAAKS,MAAM9B,uB,GArFJ4B,aCHZyC,MAJf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OAAO,cAAC,EAAD,IAAS9D,SAASC,eAAe,W","file":"static/js/main.3452cdc2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ImageGalleryItem = ({ image, largeImgHendler }) => {\n  return (\n    <>\n      <li id={image.id} className=\"ImageGalleryItem\">\n        <img\n          onClick={largeImgHendler}\n          data-source={image.largeImageURL}\n          src={image.webformatURL}\n          alt={image.type}\n          className=\"ImageGalleryItem-image\"\n        />\n      </li>\n    </>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\n\nconst ImageGalleryList = ({ images, largeImgHendler }) => {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {images?.map((image) => (\n          <ImageGalleryItem\n            image={image}\n            key={image.id}\n            largeImgHendler={largeImgHendler}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ImageGalleryList;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleClose);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleClose);\n  }\n\n  handleClose = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    console.log(this.props.largeImg);\n    return createPortal(\n      this.props.open ? (\n        <div className=\"Overlay\" onClick={this.handleClose}>\n          <div className=\"Modal\">\n            <img src={this.props.largeImg} alt=\"\" />\n          </div>\n        </div>\n      ) : null,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\n\nclass Searchbar extends Component {\n  state = {\n    searchQuery: \"\",\n  };\n\n  onHeandlerSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.searchQuery);\n  };\n\n  onHeandlerChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.onHeandlerSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={this.onHeandlerChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            placeholder=\"Search images and photos\"\n            name=\"searchQuery\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport ImageGalleryList from \"./imageGalleryList/ImageGalleryList\";\nimport Modal from \"./modal/Modal\";\nimport Searchbar from \"./searchbar/Searchbar\";\n\nconst KEY = \"21148733-fe4ceb41e783008baa1bd0520\";\n\nclass ImageGallery extends Component {\n  state = {\n    images: [],\n    largeImageURL: \"\",\n    page: 1,\n    query: \"\",\n    shoModal: false,\n    loader: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.query !== prevState.query && this.state.query !== \"\") {\n      this.axiosImage();\n    } else if (\n      this.state.query === prevState.query &&\n      this.state.page !== prevState.page\n    ) {\n      this.axiosImage();\n    }\n  }\n\n  axiosImage = async () => {\n    try {\n      const { data } = await axios.get(\n        `https://pixabay.com/api/?q=${this.state.query}&page=${this.state.page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n      );\n      this.setState((prevState) => ({\n        images: [...prevState.images, ...data.hits],\n      }));\n    } catch (error) {\n    } finally {\n      this.setState((prevState) => ({\n        loader: false,\n      }));\n\n      if (this.state.page > 1) {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      }\n    }\n  };\n\n  onFormSubmit = (query) => {\n    this.setState({ query: \"\", page: 1, images: [] });\n    this.setState({ query: query, page: 1, images: [] });\n  };\n\n  showMore = () => {\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n  };\n\n  largeImgHendler = (e) => {\n    const largeImage = e.target.dataset.source;\n    this.setState({ largeImageURL: largeImage });\n    this.openCloseModal();\n  };\n  openCloseModal = () => {\n    this.setState((prevSt) => ({ shoModal: !prevSt.shoModal }));\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.onFormSubmit} />\n\n        {this.state.loader ? (\n          <Loader />\n        ) : (\n          <ImageGalleryList\n            images={this.state.images}\n            largeImgHendler={this.largeImgHendler}\n          />\n        )}\n        {this.state.images.length > 0 && (\n          <button className=\"Button\" type=\"button\" onClick={this.showMore}>\n            Load more\n          </button>\n        )}\n\n        <Modal\n          open={this.state.shoModal}\n          onClose={this.openCloseModal}\n          largeImg={this.state.largeImageURL}\n        />\n      </>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import ImageGallery from \"./Components/ImageGallery\";\n\nfunction App() {\n  return <ImageGallery />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}